import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as e,e as s}from"./app-8d307529.js";const i={},t=s(`<h1 id="记录一次前后端传参方式不一致异常" tabindex="-1"><a class="header-anchor" href="#记录一次前后端传参方式不一致异常" aria-hidden="true">#</a> 记录一次前后端传参方式不一致异常</h1><h2 id="_1-前言" tabindex="-1"><a class="header-anchor" href="#_1-前言" aria-hidden="true">#</a> 1.前言</h2><p>大家好，我是Leo哥🫣🫣🫣，最近在写一个前后端分离案例的demo的时候，一个接口中前端向后端传递的参数方式和后端接收的方式不太一致，出现了问题。具体是啥呢，咱们接着往下聊。好了，话不多说让我们开始吧😎😎😎。</p><h2 id="_2-问题引出" tabindex="-1"><a class="header-anchor" href="#_2-问题引出" aria-hidden="true">#</a> 2.问题引出</h2><p>具体是这样的，听我慢慢道来。</p><p>首先我是先开发完了后端接口，通过Apifox测试之后，再去进行前台Vue脚手架的开发。因为Apifox是接口测试，当时并没有发现什么问题。</p><p>首先看一下我的后台注册接口，这里因为前台注册只需要传入用户名和密码，所以是通过param这种方式进行接收，而不是通过@RequestBody + User对象把其JSON对象转换为Java对象的方式。</p><figure><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311301329905.png" alt="image-20231130132952846" tabindex="0" loading="lazy"><figcaption>image-20231130132952846</figcaption></figure><p>反观前端，下面给出我前台user.js中的注册接口，可能我们正常像后端数据，都是按照我这种方式进行传递JSON数据的。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">registerService</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">registerData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> request<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/user/register&#39;</span><span class="token punctuation">,</span> registerData<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看出来下图，这里其实这个请求并不会发出，而是在前端直接拦截住了</p><figure><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311301334068.png" alt="image-20231130133426032" tabindex="0" loading="lazy"><figcaption>image-20231130133426032</figcaption></figure><p>就是后台是用param来接参数，而你前台则传递的是JSON数据，所以这里是不给通过的。</p><p>但是有的朋友的就问：Leo哥，我记得前台可以通过param传递参数啊。</p><p>没错是可以的，但那个是get请求，我这里后台注册接口是post请求，所以不太行哈。</p><h2 id="_3-解决方案" tabindex="-1"><a class="header-anchor" href="#_3-解决方案" aria-hidden="true">#</a> 3.解决方案</h2><p>没错，其实就是我们今天要介绍的主角-----<code>URLSearchParams</code> 。</p><p>在Vue的渲染函数中给固定的URL添加参数，你可以使用JavaScript中的URLSearchParams对象来构建查询参数，并将其附加到URL上。</p><p>话不多说，直接开干。</p><figure><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311301342363.png" alt="image-20231130134256329" tabindex="0" loading="lazy"><figcaption>image-20231130134256329</figcaption></figure><p>只需要new一个<code>URLSearchParams</code>对象，然后把registerData的数据循环添加到参数上，最后传给后台即可。</p><p>现在我们再次验证一下我们的接口，进行注册。</p><figure><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311301344779.png" alt="image-20231130134452748" tabindex="0" loading="lazy"><figcaption>image-20231130134452748</figcaption></figure><p>可以看出，我们成功进行了注册。</p><h2 id="_4-总结" tabindex="-1"><a class="header-anchor" href="#_4-总结" aria-hidden="true">#</a> 4.总结</h2><p>以上便是本文的全部内容，本人才疏学浅，文章有什么错误的地方，欢迎大佬们批评指正！我是<strong>Leo</strong>，一个在互联网行业的小白，立志成为更好的自己。</p><p>如果你想了解更多关于<strong>Leo</strong>，可以关注公众号-程序员Leo，后面文章会首先同步至公众号。</p><figure><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311301345907.png" alt="公众号封面" tabindex="0" loading="lazy"><figcaption>公众号封面</figcaption></figure>`,28),o=[t];function p(r,c){return n(),e("div",null,o)}const l=a(i,[["render",p],["__file","record-exception-of-inconsistent-parameter-transmission-methods.html.vue"]]);export{l as default};
