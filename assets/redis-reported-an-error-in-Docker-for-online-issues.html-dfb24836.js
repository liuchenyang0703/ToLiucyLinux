import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e as n}from"./app-8d307529.js";const r={},i=n(`<p><strong>原因：</strong> <code>docker部署redis</code>，项目使用redis时，报错nested exception is io.lettuce.core.RedisCommandExecutionException: READONLY （<code>当前redis为只读</code>）</p><h2 id="_1-思路" tabindex="-1"><a class="header-anchor" href="#_1-思路" aria-hidden="true">#</a> 1. 思路</h2><p>最开始我的思路是，可能当时是因为Docker部署的Redis，没有什么配置文件相关的配置，导致当前Redis只能读不能写入。</p><h2 id="_2-解决方式" tabindex="-1"><a class="header-anchor" href="#_2-解决方式" aria-hidden="true">#</a> 2. 解决方式</h2><h3 id="_2-1-进入容器" tabindex="-1"><a class="header-anchor" href="#_2-1-进入容器" aria-hidden="true">#</a> 2.1 进入容器</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> redis /bin/bash 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-2-进入redis客户端" tabindex="-1"><a class="header-anchor" href="#_2-2-进入redis客户端" aria-hidden="true">#</a> 2.2 进入Redis客户端</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>redis-cli 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-3-查看redis属性信息" tabindex="-1"><a class="header-anchor" href="#_2-3-查看redis属性信息" aria-hidden="true">#</a> 2.3 查看Redis属性信息</h3><figure><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202307161542566.png" alt="image-20230716154232437" tabindex="0" loading="lazy"><figcaption>image-20230716154232437</figcaption></figure><p>备注：<code>可看到redis为slave</code>，为从节点，默认为只读</p><h3 id="_2-4-设置redis只读属性为no" tabindex="-1"><a class="header-anchor" href="#_2-4-设置redis只读属性为no" aria-hidden="true">#</a> 2.4 设置redis只读属性为no</h3><figure><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202307161543580.png" alt="image-20230716154315510" tabindex="0" loading="lazy"><figcaption>image-20230716154315510</figcaption></figure><p><strong>重启Redis容器之后,发现问题解决了。</strong></p><h2 id="_3-后续" tabindex="-1"><a class="header-anchor" href="#_3-后续" aria-hidden="true">#</a> 3. 后续</h2><blockquote><p>但是第二天发现仍出现了昨天同样的问题，于是觉得这种方式行不通，通过查询资料得知，在服务器安装Redis则必须对外访问<code>ip</code>设置为0.0.0.0，并且Redis必须设置密码</p></blockquote><p>于是删除<code>Docker</code>中的<code>Reids</code>镜像，重新安装Reis，并设置密码访问。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">1.</span> 拉取redis镜像
# 不指定版本号，默认拉取最新版的redis 
docker pull redis
# 指定的版本号 docker pull redis<span class="token operator">:</span><span class="token number">5.0</span><span class="token number">.14</span>
# 查看镜像是否拉取成功docker images

<span class="token number">2.</span> 运行redis
# 带密码认证的redis，登录时需要输入验证码  appendonly（redis是否持久化）
docker run <span class="token operator">--</span>name redis <span class="token operator">-</span>p <span class="token number">6379</span><span class="token operator">:</span><span class="token number">6379</span> <span class="token operator">-</span>d <span class="token operator">--</span>restart<span class="token operator">=</span>always redis redis<span class="token operator">-</span>server <span class="token operator">--</span>appendonly yes <span class="token operator">--</span>requirepass <span class="token number">123456</span>

# 不带密码认证的redis
docker run <span class="token operator">--</span>name redis <span class="token operator">-</span>p <span class="token number">6379</span><span class="token operator">:</span><span class="token number">6379</span> <span class="token operator">-</span>d <span class="token operator">--</span>restart<span class="token operator">=</span>always redis redis<span class="token operator">-</span>server <span class="token operator">--</span>appendonly yes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>这里一定要选择第一种，Redis持久化，设置密码</strong></p><h2 id="_4-总结" tabindex="-1"><a class="header-anchor" href="#_4-总结" aria-hidden="true">#</a> 4. 总结</h2><p>OK，到这里问题才完全解决！</p><figure><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202312031906036.png" alt="公众号封面" tabindex="0" loading="lazy"><figcaption>公众号封面</figcaption></figure>`,22),d=[i];function o(c,t){return a(),s("div",null,d)}const u=e(r,[["render",o],["__file","redis-reported-an-error-in-Docker-for-online-issues.html.vue"]]);export{u as default};
