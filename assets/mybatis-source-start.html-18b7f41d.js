import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as t,e}from"./app-8d307529.js";const l={},u=e(`<blockquote><p>大家好，我是Leo🫣🫣🫣，从今天开始跟着孙帅老师一起学习MyBatis3的源码学习，这个系列记录着MyBatis3源码学习的笔记和思考，</p><p>让我们开始吧😎😎😎。</p></blockquote><h2 id="_1-mybatis回顾" tabindex="-1"><a class="header-anchor" href="#_1-mybatis回顾" aria-hidden="true">#</a> 1. MyBatis回顾</h2><h3 id="_1-1-关于开发环境" tabindex="-1"><a class="header-anchor" href="#_1-1-关于开发环境" aria-hidden="true">#</a> 1.1 关于开发环境</h3><p>下面是笔者本次学习<strong>MyBatis</strong>源码的开发环境，大家可以进行参考。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token list punctuation">1.</span> JDK8
<span class="token list punctuation">2.</span> IDEA2023.2
<span class="token list punctuation">3.</span> Maven3.8
<span class="token list punctuation">4.</span> MySQL 8.0.32 --&gt; MySQL 8 即可
<span class="token list punctuation">5.</span> Mybatis 3.4.6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-mybatis开发的简单回顾" tabindex="-1"><a class="header-anchor" href="#_1-2-mybatis开发的简单回顾" aria-hidden="true">#</a> 1.2 Mybatis开发的简单回顾</h3><h4 id="_1-什么是mybatis" tabindex="-1"><a class="header-anchor" href="#_1-什么是mybatis" aria-hidden="true">#</a> 1. 什么是Mybatis</h4><p><strong>MyBatis</strong>本是<strong>apache</strong>的一个开源项目<strong>iBatis</strong>, 2010年这个项目由 <strong>apache software foundation</strong> 迁移到了google code，并且改名为MyBatis。<strong>MyBatis</strong>是一个基于Java的持久层框架Mybatis是一个ORM类型框架，解决的数据库访问和操作的问题，对现有JDBC技术的封装。</p><h4 id="_2-为什么使用mybatis" tabindex="-1"><a class="header-anchor" href="#_2-为什么使用mybatis" aria-hidden="true">#</a> 2. 为什么使用MyBatis？</h4><p>我们以前在没有ORM框架的情况下，如果你要开发一个Web应用程序的话，你就必须要使用传统的JDBC代码来操作数据库，我们除了需要自己提供 SQL 外，还必须操作 Connection、Statment、ResultSet等，不仅如此，为了访问不同的表，不同字段的数据，我们需要些很多雷同模板化的代码，而这些代码写起来往往是重复的，写起来又繁琐又枯燥。</p><h3 id="_1-3-搭建mybatis开发环境" tabindex="-1"><a class="header-anchor" href="#_1-3-搭建mybatis开发环境" aria-hidden="true">#</a> 1.3 搭建MyBatis开发环境</h3><h4 id="_1-导入依赖" tabindex="-1"><a class="header-anchor" href="#_1-导入依赖" aria-hidden="true">#</a> 1.导入依赖</h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.4.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>8.0.32<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-创建表以及编写实体类" tabindex="-1"><a class="header-anchor" href="#_2-创建表以及编写实体类" aria-hidden="true">#</a> 2.创建表以及编写实体类</h4><p><strong>表SQL</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>
  <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;名称&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>password<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;密码&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">1003</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8mb4_0900_ai_ci<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>编写实体类</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>javatop<span class="token punctuation">.</span>pojo</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> : Leo
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@date</span> 2023-10-17 21:22
 * <span class="token keyword">@description</span> : 用户实体类
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
   <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
   
   <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>


    <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;User{&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;id=&quot;</span> <span class="token operator">+</span> id <span class="token operator">+</span>
                <span class="token string">&quot;, name=&#39;&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
                <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-编写mapper文件以及mapper映射文件" tabindex="-1"><a class="header-anchor" href="#_3-编写mapper文件以及mapper映射文件" aria-hidden="true">#</a> 3.编写mapper文件以及mapper映射文件</h4><p><strong>mapper文件</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>javatop<span class="token punctuation">.</span>mapper</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>javatop<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> : Leo
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@date</span> 2023-10-17 21:27
 * <span class="token keyword">@description</span> : mapper文件
 */</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token punctuation">{</span>


    <span class="token doc-comment comment">/**
     * 查询所有用户信息
     * <span class="token keyword">@return</span>
     */</span>
     <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>mapper映射文件</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectUserList<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        select id,name,password from user
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-准备配置文件" tabindex="-1"><a class="header-anchor" href="#_4-准备配置文件" aria-hidden="true">#</a> 4.准备配置文件</h4><p>编写mybatis-config.xml配置文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span> <span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span> <span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAlias</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.javatop.pojo.User<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alias</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">&gt;</span></span>


    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>default<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>default<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>JDBC<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>POOLED<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>driver<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mysql.cj.jdbc.Driver<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jdbc:mysql://localhost:3306/suns?useSSL=false<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--&lt;package name=&quot;&quot;--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UserMapper.xml<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-编写测试类" tabindex="-1"><a class="header-anchor" href="#_5-编写测试类" aria-hidden="true">#</a> 5.编写测试类</h4><p>编写测试类TestMyBatis</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>javatop<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">UserMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>javatop<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> : Leo
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@date</span> 2023-10-17 9:55
 * <span class="token keyword">@description</span> : MyBatis基本开发测试
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestMyBatis</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
    * 用于测试: MyBatis基本开发的第一种
    */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;mybatis-config.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SqlSessionFactory</span> sqlSessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">UserMapper</span> userMapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> userList <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">User</span> user <span class="token operator">:</span> userList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;user = &quot;</span> <span class="token operator">+</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>运行结果：</strong></p><figure><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/Leo100/202310172153387.png" alt="image-20231017215356172" tabindex="0" loading="lazy"><figcaption>image-20231017215356172</figcaption></figure><h4 id="_5-总结mybatis开发步骤" tabindex="-1"><a class="header-anchor" href="#_5-总结mybatis开发步骤" aria-hidden="true">#</a> 5.总结MyBatis开发步骤</h4><p>思考：除了这种方式，是否还有其它方式呢？</p><p>其实对于大家来说，很多是没有见过这种方式开发方式的，往远的说，其实就是MyBtis的前身了，<strong>ibatis</strong> ，笔者公司的老项目用的正是ibatis，话不多说，直接上代码。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * 用于测试:MyBatis 基本开发的第二种方式
    */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;mybatis-config.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SqlSessionFactory</span> sqlSessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> userList <span class="token operator">=</span>  sqlSession<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token string">&quot;org.javatop.mapper.UserMapper.selectUserList&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种方式是通过每个mapper文件中的 <strong>namespace + 接口名称</strong> 来确定我们的mapper接口。虽然也能实现我们查询所有用户的功能，但是这样看起来可读性是不是太差了。其实两种方式功能等价 ，实现效果也是一样的。</p><p><strong>区别：</strong></p><p>第一种方式好 表达概念更清晰<br> 第一种开发，本质上就是对第二种开发的封装。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token list punctuation">1.</span> 编写实体类entity
<span class="token list punctuation">2.</span> 类型别名
<span class="token list punctuation">3.</span> 创建表table 
<span class="token list punctuation">4.</span> mapper接口
<span class="token list punctuation">5.</span> Mapper文件
<span class="token list punctuation">6.</span> Mapper文件的注册
<span class="token list punctuation">7.</span> JavaAPI编程 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-mybatis的核心对象" tabindex="-1"><a class="header-anchor" href="#_2-mybatis的核心对象" aria-hidden="true">#</a> 2. MyBatis的核心对象</h2><h3 id="_2-1-mybatis的核心对象" tabindex="-1"><a class="header-anchor" href="#_2-1-mybatis的核心对象" aria-hidden="true">#</a> 2.1 MyBatis的核心对象</h3><h4 id="_1-前言知识补充" tabindex="-1"><a class="header-anchor" href="#_1-前言知识补充" aria-hidden="true">#</a> 1. 前言知识补充</h4><p>Mybatis是对JDBC的封装，将JDBC封装成了一个核心的SQLSession对象。<br> JDBC当中的核心对象：Connection、Statement、ResultSet。</p>`,43),r=n("li",null,"Statement：普通的Statement",-1),d={href:"https://so.csdn.net/so/search?q=%E9%A2%84%E7%BC%96%E8%AF%91&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},k={href:"https://so.csdn.net/so/search?q=%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},m=e(`<p>注意：Mybatis中使用的是<strong>PeparedStatement</strong>预编译。</p><blockquote><p>通过这些Statement与我们的数据库进行交互，然后由我们的结果集对象ResultSet对象进行封装。</p><p>SqlSession是对以上内容进行了封装。</p><p>相对于以上来讲，SQLSession是对JDBC的封装，SQLSessionFactory是创建SQLSession对象的工厂，我们还基于mybatis-config.xml配置</p><p>Mybatis，并且在Mapper.xml当中配置SQL，了解到这里我们对于Mybatis的认知就比较权限</p><p>在Java中，或者说在JVM当中对Mybatis相关的配置信息进行封装。这里边设计到很多的配置文件，我们不可能说用点就读一次文件，这样会有极大的</p><p>IO，IO是操作系统层面的资源，他的创建绝不是虚拟机单独完成的，是很耗时的，少操作或者能复用最好。 对于这种东西，我们都是在程序启动时一次性</p><p>读取，存储在Java对象当中</p><p>MyBatis当中的配置信息一共有两种：mybatis-config.xml和userMapper.xml。</p><p>其中mybatis-config.xml封装成了org.apache.ibatis.session.Configuration对象，DAOMapper.xml封装成了MapperdStatement部分数</p><p>据是在Configuration当中进行保存的。</p></blockquote><p><strong>基于以上，我们可以知道在Mybatis当中有两类对象：数据储存类对象 + 操作类对象。</strong></p><h4 id="_2-数据存储类对象" tabindex="-1"><a class="header-anchor" href="#_2-数据存储类对象" aria-hidden="true">#</a> 2. 数据存储类对象</h4><h5 id="_1-1-初始configuration" tabindex="-1"><a class="header-anchor" href="#_1-1-初始configuration" aria-hidden="true">#</a> 1.1 初始Configuration</h5><p>概念：在Java中（JVM)对Mybatis相关的配置信息进行封装。</p><p>Configuration是数据存储类对象，是将Mybatis当中的<strong>mybatis-config.xml</strong>封装成Configuration对象，Mapper.xml封装成了<strong>MappedStatement</strong>对象，当然<strong>MappedStatement</strong>这样表述不是特别完整。</p><p><strong>简单来讲Configuration的作用：</strong></p><ol><li>封装了mybatis-config.xml。 <ol><li>封装了mapper文件MappedStatement。</li></ol></li><li>创建Mybatis其他相关的对象。</li></ol><h5 id="_1-2-初始mappersatement" tabindex="-1"><a class="header-anchor" href="#_1-2-初始mappersatement" aria-hidden="true">#</a> 1.2 初始MapperSatement</h5><p>对应的就是Mapper文件中的一个一个的配置标签</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id.</span> <span class="token attr-name">-----</span><span class="token punctuation">&gt;</span></span> MappedStatement
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id.</span> <span class="token attr-name">-----</span><span class="token punctuation">&gt;</span></span> MappedStatement  
  注定 一个Mybatis应用中 N个MappedStament 对象 
  MappedStatment ---&gt; Configuration 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-3-mybatis-config-xml与configuration属性的映射关系" tabindex="-1"><a class="header-anchor" href="#_1-3-mybatis-config-xml与configuration属性的映射关系" aria-hidden="true">#</a> 1.3 mybatis-config.xml与Configuration属性的映射关系</h5><p>我们打开Configuration的源码可以得知，在Configuration中定义了大量的mybatis-config.xml中的标签，比如： <strong>environments</strong>，<strong>settings</strong>，<strong>typeAliases</strong>，<strong>Mappers</strong> 等标签。</p><figure><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/Leo100/202310180952553.png" alt="image-20201228204347155" tabindex="0" loading="lazy"><figcaption>image-20201228204347155</figcaption></figure><p><strong>分析：</strong></p><p>caches，parameterMaps，resultMaps，MapperdStatement,keyGenerators 这些是把Mapper.xml文件中的内容进行了封装。<br> resultMaps：所有的Mapper.xml文件中resultMap标签。<br> parameterMaps：是对sql标签上的parameterMap是属性做了处理。</p><p>上边这些属性都加了S都代表了是复数，也就是他的数量不只一个。这玩意存储的不是公共的，而是所有的。里边存储了对于所有的Mapper.xml文件中的这些属性都封装到这里边了。</p>`,18),v={href:"http://xn--keynamespace-w26s390mkl5agv8c.id",target:"_blank",rel:"noopener noreferrer"},g={href:"http://xn--keynamespace-0i0z.id",target:"_blank",rel:"noopener noreferrer"},b=n("h5",{id:"_1-4-configuration对象的作用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-4-configuration对象的作用","aria-hidden":"true"},"#"),s(" 1.4 Configuration对象的作用")],-1),y=n("p",null,[n("strong",null,"作用1："),s(" 封装Mybatis-Config.xml先关的内容。"),n("br"),s(" environments属性，封装的environments标签"),n("br"),s(" typeAliases标签（实体全限定类型和简称的映射）这个也在Configuration当中也有封装"),n("br"),s(" Mappers标签，我们在Configuration当中也是有对象进行对应的。其中对应的是 Set loadResources"),n("br"),s(" 到这，Mybatis-config.xml所有的标签，我们在configuration对象当中就都可以找到了。")],-1),h=n("strong",null,"作用二：",-1),f=n("br",null,null,-1),S={href:"http://xn--StringnameSpace-kz3xq22br24gr32cl4uf.id",target:"_blank",rel:"noopener noreferrer"},M=n("br",null,null,-1),q=e('<p><strong>作用三：</strong> 他的第三个核心作用就是帮我们创建：Mybatis其他涉及到的核心对象也创建出来，所以我们认为他是Mybatis当中最为核心的对象。<br> 在这里可以认为Configuration实现是这些对象的执行对象的工厂对象。</p><p><strong>作用4：</strong> SQL映射配置管理：Configurationi对象负责管理应用程序的SQL映射配置信息。它可以读取和解析Mapper接口或XML文件，将SQL语句与数据库操作进行映射关联。Configuration对象维护了一个用于存储$QL映射配置的集合，其中包含了每个SQL语句的信息，如语句类型(INSERT、SELECT、UPDATE、DELETE)、参数映射、结果映射等。</p><p><strong>总的来说，Configuration对象在MyBatis框架中承担着配置管理和资源管理的职责，负责管理数据源、SQL映射配置、对象工厂、对象包装器和插件等重要组件，以保证MyBatis的正常运行和提供灵活的配置和扩展能力。</strong></p><h5 id="_1-5-mappedstatement对象" tabindex="-1"><a class="header-anchor" href="#_1-5-mappedstatement对象" aria-hidden="true">#</a> 1.5 MappedStatement对象</h5><p>我们可以打开Configuration的源码中可以找到MapperStatement</p><figure><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/Leo100/202310181002137.png" alt="image-20231018100247991" tabindex="0" loading="lazy"><figcaption>image-20231018100247991</figcaption></figure><p>通过ctrl + B 点进去查看</p><figure><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/Leo100/202310181003235.png" alt="image-20231018100336038" tabindex="0" loading="lazy"><figcaption>image-20231018100336038</figcaption></figure><p>可以发现 MappedStatement对象，也是一个存储了对象，存储的是Mapper文件中的Statement也就是我们定义的SQL标签，其中封装的是我们Mapper文件中的一个个标签，举例来讲 其中一个标签就会被封装成<strong>MappedStatement</strong>对象</p><p>我们的标签当中肯定会有id的属性，在我们的MappedStatement当中也会有id的属性。id属性完全唯一，他存储的是namespace.id所以，也是唯一，注定了在一个Mabatis当中会有N个MapperStatement对象。</p><p>这里边的statementType是什么意思，指的就是普通，预编译，存储过程。默认使用的就是preparedStatement，所以在我们的SQL标签上也肯定有这个属性，这个属性默认一定是prepared。</p><p><strong>注意：MappedStatement当中可以找到Configuration对象，Configurantion对象可以找到MapperdStatement对象，他俩互相引用，双向关联，可以互相找到。</strong></p><h2 id="_3-总结" tabindex="-1"><a class="header-anchor" href="#_3-总结" aria-hidden="true">#</a> 3.总结</h2><p>以上便是本文的全部内容，本人才疏学浅，文章有什么错误的地方，欢迎大佬们批评指正！我是<strong>Leo</strong>，一个在互联网行业的小白，立志成为更好的自己。</p><p>如果你想了解更多关于<strong>Leo</strong>，可以关注公众号-程序员Leo，后面文章会首先同步至公众号。</p><figure><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202312031906036.png" alt="公众号封面" tabindex="0" loading="lazy"><figcaption>公众号封面</figcaption></figure>',16);function _(w,x){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("ul",null,[r,n("li",null,[s("PeparedStatement："),n("a",d,[s("预编译"),t(a)]),s(" Statement")]),n("li",null,[s("CallableStatement：适用于"),n("a",k,[s("存储过程"),t(a)]),s("Statement")])]),m,n("p",null,[s("这些不仅仅要存还要用，所以是将他们存入到了一个Map中，他是有key的，"),n("a",v,[s("他的key就是namespace.id"),t(a)]),s("。所以你就发现这一组。这些对象封装到Configuration对象中之后都是采用的Map<String,xxx>这样的形式，"),n("a",g,[s("key是namespace.id"),t(a)]),s(" 的形式。")]),b,y,n("p",null,[h,s(" Configuration将xxxMapper.xml封装成了MapperStatment对象组放到了Configurantion对象中进行引用。"),f,s(" Configuration中的属性是Map<String,MappedStatement> mappedStatements "),n("a",S,[s("其中的String还是nameSpace.id"),t(a)]),M,s(" Configuration对象还包括：还有其他的结果集，参数，使用返回参数key（caches，parameterMaps，resultMaps，MapperdStatement,keyGenerators ）等等。")]),q])}const E=p(l,[["render",_],["__file","mybatis-source-start.html.vue"]]);export{E as default};
