const l=JSON.parse('{"key":"v-a7167b8e","path":"/framework/spring/spring5-ioc.html","title":"SpringIOC编程","lang":"zh-CN","frontmatter":{"title":"SpringIOC编程","icon":"circle-info","order":1,"category":["spring🍃"],"tag":["spring🍃"],"pageview":false,"date":"2023-08-29T00:00:00.000Z","comment":false,"breadcrumb":false,"description":"1. 初始Spring 1.1 EJB存在的问题\\r EJB (Enterprise Java Beans) 是基于分布式事务处理的企业级应用程序的组件。Sun公司发布的文档中对EJB的定义是：EJB是用于开发和部署多层结构的、分布式的、面向对象的Java应用系统的跨平台的构件体系结构。 EJB是一个重量级框架 (opens new window) (h...","head":[["meta",{"property":"og:url","content":"http://liuchenyang.top/ToLiucyLinux/framework/spring/spring5-ioc.html"}],["meta",{"property":"og:site_name","content":"ToLiucyLinux"}],["meta",{"property":"og:title","content":"SpringIOC编程"}],["meta",{"property":"og:description","content":"1. 初始Spring 1.1 EJB存在的问题\\r EJB (Enterprise Java Beans) 是基于分布式事务处理的企业级应用程序的组件。Sun公司发布的文档中对EJB的定义是：EJB是用于开发和部署多层结构的、分布式的、面向对象的Java应用系统的跨平台的构件体系结构。 EJB是一个重量级框架 (opens new window) (h..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Liucy"}],["meta",{"property":"article:tag","content":"spring🍃"}],["meta",{"property":"article:published_time","content":"2023-08-29T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringIOC编程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-29T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Liucy\\",\\"url\\":\\"http://liuchenyang.top\\"}]}"]]},"headers":[{"level":2,"title":"1. 初始Spring","slug":"_1-初始spring","link":"#_1-初始spring","children":[{"level":3,"title":"1.1 EJB存在的问题","slug":"_1-1-ejb存在的问题","link":"#_1-1-ejb存在的问题","children":[]},{"level":3,"title":"1.2 什么是Spring","slug":"_1-2-什么是spring","link":"#_1-2-什么是spring","children":[]},{"level":3,"title":"1.4 什么是设计模式","slug":"_1-4-什么是设计模式","link":"#_1-4-什么是设计模式","children":[]},{"level":3,"title":"1.5 工厂设计模式","slug":"_1-5-工厂设计模式","link":"#_1-5-工厂设计模式","children":[]},{"level":3,"title":"1.6 Spring 框架概念","slug":"_1-6-spring-框架概念","link":"#_1-6-spring-框架概念","children":[]},{"level":3,"title":"1.7 Spring 源码架构","slug":"_1-7-spring-源码架构","link":"#_1-7-spring-源码架构","children":[]},{"level":3,"title":"1.8 第一个Spring程序","slug":"_1-8-第一个spring程序","link":"#_1-8-第一个spring程序","children":[]}]},{"level":2,"title":"2. Spring5与日志框架的整合","slug":"_2-spring5与日志框架的整合","link":"#_2-spring5与日志框架的整合","children":[{"level":3,"title":"2.1 为什么要整合日志框架？","slug":"_2-1-为什么要整合日志框架","link":"#_2-1-为什么要整合日志框架","children":[]},{"level":3,"title":"2.2 Spring如何整合日志框架？","slug":"_2-2-spring如何整合日志框架","link":"#_2-2-spring如何整合日志框架","children":[]}]},{"level":2,"title":"3. Spring IOC 容器 Bean 对象实例化","slug":"_3-spring-ioc-容器-bean-对象实例化","link":"#_3-spring-ioc-容器-bean-对象实例化","children":[{"level":3,"title":"3.1 定义 Bean 属性对象","slug":"_3-1-定义-bean-属性对象","link":"#_3-1-定义-bean-属性对象","children":[]},{"level":3,"title":"3.2 添加 dom4j 坐标依赖","slug":"_3-2-添加-dom4j-坐标依赖","link":"#_3-2-添加-dom4j-坐标依赖","children":[]},{"level":3,"title":"3.3 准备自定义配置文件","slug":"_3-3-准备自定义配置文件","link":"#_3-3-准备自定义配置文件","children":[]},{"level":3,"title":"3.4 定义 Bean 工厂接口","slug":"_3-4-定义-bean-工厂接口","link":"#_3-4-定义-bean-工厂接口","children":[]},{"level":3,"title":"3.5 定义 Bean 接口的实现类","slug":"_3-5-定义-bean-接口的实现类","link":"#_3-5-定义-bean-接口的实现类","children":[]},{"level":3,"title":"3.6 测试自定义 IOC 容器","slug":"_3-6-测试自定义-ioc-容器","link":"#_3-6-测试自定义-ioc-容器","children":[]}]},{"level":2,"title":"4. Spring IOC 配置文件加载","slug":"_4-spring-ioc-配置文件加载","link":"#_4-spring-ioc-配置文件加载","children":[{"level":3,"title":"4.1 Spring  配置文件加载","slug":"_4-1-spring-配置文件加载","link":"#_4-1-spring-配置文件加载","children":[]},{"level":3,"title":"4.2 根据相对路径加载资源","slug":"_4-2-根据相对路径加载资源","link":"#_4-2-根据相对路径加载资源","children":[]},{"level":3,"title":"4.3 根据绝对路径加载资源","slug":"_4-3-根据绝对路径加载资源","link":"#_4-3-根据绝对路径加载资源","children":[]}]},{"level":2,"title":"5. 注入","slug":"_5-注入","link":"#_5-注入","children":[{"level":3,"title":"5.1 什么是注入","slug":"_5-1-什么是注入","link":"#_5-1-什么是注入","children":[]},{"level":3,"title":"5.2 为什么要注入","slug":"_5-2-为什么要注入","link":"#_5-2-为什么要注入","children":[]},{"level":3,"title":"5.3 如何注入","slug":"_5-3-如何注入","link":"#_5-3-如何注入","children":[]},{"level":3,"title":"5.4 Spring注入的原理分析","slug":"_5-4-spring注入的原理分析","link":"#_5-4-spring注入的原理分析","children":[]}]},{"level":2,"title":"6. Set注入详解","slug":"_6-set注入详解","link":"#_6-set注入详解","children":[{"level":3,"title":"6.1 JDK内置类型","slug":"_6-1-jdk内置类型","link":"#_6-1-jdk内置类型","children":[]},{"level":3,"title":"6.2 用户自定义类型","slug":"_6-2-用户自定义类型","link":"#_6-2-用户自定义类型","children":[]}]},{"level":2,"title":"7. 构造器注入","slug":"_7-构造器注入","link":"#_7-构造器注入","children":[{"level":3,"title":"7.1 开发步骤","slug":"_7-1-开发步骤","link":"#_7-1-开发步骤","children":[]},{"level":3,"title":"7.2 构造方法重载","slug":"_7-2-构造方法重载","link":"#_7-2-构造方法重载","children":[]},{"level":3,"title":"7.3 注入总结","slug":"_7-3-注入总结","link":"#_7-3-注入总结","children":[]}]},{"level":2,"title":"8. 控制反转 与 依赖注入","slug":"_8-控制反转-与-依赖注入","link":"#_8-控制反转-与-依赖注入","children":[{"level":3,"title":"8.1 控制反转","slug":"_8-1-控制反转","link":"#_8-1-控制反转","children":[]},{"level":3,"title":"8.2 依赖注入","slug":"_8-2-依赖注入","link":"#_8-2-依赖注入","children":[]}]},{"level":2,"title":"9. Spring工厂创建复杂对象","slug":"_9-spring工厂创建复杂对象","link":"#_9-spring工厂创建复杂对象","children":[{"level":3,"title":"9.1 什么是复杂对象","slug":"_9-1-什么是复杂对象","link":"#_9-1-什么是复杂对象","children":[]},{"level":3,"title":"9.2 Spring工厂创建复杂对象的3种方式","slug":"_9-2-spring工厂创建复杂对象的3种方式","link":"#_9-2-spring工厂创建复杂对象的3种方式","children":[]},{"level":3,"title":"9.3 Spring工厂创建对象总结","slug":"_9-3-spring工厂创建对象总结","link":"#_9-3-spring工厂创建对象总结","children":[]}]},{"level":2,"title":"10. 控制Spring工厂创建对象的次数","slug":"_10-控制spring工厂创建对象的次数","link":"#_10-控制spring工厂创建对象的次数","children":[{"level":3,"title":"1. 为什么要控制对象的创建次数？","slug":"_1-为什么要控制对象的创建次数","link":"#_1-为什么要控制对象的创建次数","children":[]},{"level":3,"title":"2. 如何控制简单对象的创建次数","slug":"_2-如何控制简单对象的创建次数","link":"#_2-如何控制简单对象的创建次数","children":[]},{"level":3,"title":"3. 如何控制复杂对象的创建次数","slug":"_3-如何控制复杂对象的创建次数","link":"#_3-如何控制复杂对象的创建次数","children":[]}]}],"git":{},"readingTime":{"minutes":20.01,"words":6003},"filePathRelative":"framework/spring/spring5-ioc.md","localizedDate":"2023年8月29日","copyright":{"author":"LiucyLinux(LiucyLinux.cn)","license":"MIT"},"autoDesc":true}');export{l as data};
