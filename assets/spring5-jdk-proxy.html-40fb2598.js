const e=JSON.parse('{"key":"v-b3f244f8","path":"/framework/spring/spring5-jdk-proxy.html","title":"SpringJDK动态代理","lang":"zh-CN","frontmatter":{"title":"SpringJDK动态代理","icon":"circle-info","order":8,"category":["spring🍃"],"tag":["spring🍃"],"pageview":false,"date":"2023-11-05T23:47:15.000Z","comment":false,"breadcrumb":false,"description":"1.前言 前面文章我们学习了关于Spring的IOC与AOP相关知识点，在此之前，我们主要学习Spring的一些核心概念，IOC和AOP等等。我们之前学习了简单了解了AOP如何借助动态字节码技术来构建动态代理类。实现动态代理的方式不止一种。本次系列文章主要介绍两种：JDK动态代理和CGlib动态代理，主要主要介绍JDK动态代理。首先，我们将着重了解JD...","head":[["meta",{"property":"og:url","content":"http://liuchenyang.top/ToLiucyLinux/framework/spring/spring5-jdk-proxy.html"}],["meta",{"property":"og:site_name","content":"ToLiucyLinux"}],["meta",{"property":"og:title","content":"SpringJDK动态代理"}],["meta",{"property":"og:description","content":"1.前言 前面文章我们学习了关于Spring的IOC与AOP相关知识点，在此之前，我们主要学习Spring的一些核心概念，IOC和AOP等等。我们之前学习了简单了解了AOP如何借助动态字节码技术来构建动态代理类。实现动态代理的方式不止一种。本次系列文章主要介绍两种：JDK动态代理和CGlib动态代理，主要主要介绍JDK动态代理。首先，我们将着重了解JD..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Liucy"}],["meta",{"property":"article:tag","content":"spring🍃"}],["meta",{"property":"article:published_time","content":"2023-11-05T23:47:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringJDK动态代理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-05T23:47:15.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Liucy\\",\\"url\\":\\"http://liuchenyang.top\\"}]}"]]},"headers":[{"level":2,"title":"1.前言","slug":"_1-前言","link":"#_1-前言","children":[]},{"level":2,"title":"2.什么是JDK动态代理","slug":"_2-什么是jdk动态代理","link":"#_2-什么是jdk动态代理","children":[]},{"level":2,"title":"3.JDK动态代理的优缺点","slug":"_3-jdk动态代理的优缺点","link":"#_3-jdk动态代理的优缺点","children":[{"level":3,"title":"3.1 优点","slug":"_3-1-优点","link":"#_3-1-优点","children":[]},{"level":3,"title":"3.2 缺点","slug":"_3-2-缺点","link":"#_3-2-缺点","children":[]}]},{"level":2,"title":"4.JDK动态代理的开发步骤","slug":"_4-jdk动态代理的开发步骤","link":"#_4-jdk动态代理的开发步骤","children":[{"level":3,"title":"4.1 ClassLoader","slug":"_4-1-classloader","link":"#_4-1-classloader","children":[]},{"level":3,"title":"4.2 Class<?>[]","slug":"_4-2-class","link":"#_4-2-class","children":[]},{"level":3,"title":"4.3 InvocationHandler","slug":"_4-3-invocationhandler","link":"#_4-3-invocationhandler","children":[]}]},{"level":2,"title":"5.JDK动态代理小结","slug":"_5-jdk动态代理小结","link":"#_5-jdk动态代理小结","children":[]},{"level":2,"title":"6.参考文献","slug":"_6-参考文献","link":"#_6-参考文献","children":[]},{"level":2,"title":"7.总结","slug":"_7-总结","link":"#_7-总结","children":[]}],"git":{},"readingTime":{"minutes":10.56,"words":3167},"filePathRelative":"framework/spring/spring5-jdk-proxy.md","localizedDate":"2023年11月6日","copyright":{"author":"LiucyLinux(LiucyLinux.cn)","license":"MIT"},"autoDesc":true}');export{e as data};
