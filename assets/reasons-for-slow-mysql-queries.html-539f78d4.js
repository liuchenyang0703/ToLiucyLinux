const e=JSON.parse(`{"key":"v-786eb816","path":"/database/Advanced/reasons-for-slow-mysql-queries.html","title":"12个MySQL慢查询的原因","lang":"zh-CN","frontmatter":{"title":"12个MySQL慢查询的原因","icon":"circle-info","order":1,"category":["数据库"],"tag":["数据库"],"pageview":false,"date":"2023-08-29T00:00:00.000Z","comment":false,"breadcrumb":false,"description":"很多时候，我们的慢查询，都是因为没有加索引。如果没有加索引的话，会导致全表扫描的。因此，应考虑在 where 的条件列，建立索引，尽量避免全表扫描。 反例： ~~~sql select * from user_info where name ='捡田螺的小男孩 ; ~~~ img 正例： ~~~sql //添加索引 alter table userin...","head":[["meta",{"property":"og:url","content":"http://liuchenyang.top/ToLiucyLinux/database/Advanced/reasons-for-slow-mysql-queries.html"}],["meta",{"property":"og:site_name","content":"ToLiucyLinux"}],["meta",{"property":"og:title","content":"12个MySQL慢查询的原因"}],["meta",{"property":"og:description","content":"很多时候，我们的慢查询，都是因为没有加索引。如果没有加索引的话，会导致全表扫描的。因此，应考虑在 where 的条件列，建立索引，尽量避免全表扫描。 反例： ~~~sql select * from user_info where name ='捡田螺的小男孩 ; ~~~ img 正例： ~~~sql //添加索引 alter table userin..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Liucy"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:published_time","content":"2023-08-29T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"12个MySQL慢查询的原因\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-29T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Liucy\\",\\"url\\":\\"http://liuchenyang.top\\"}]}"]]},"headers":[{"level":3,"title":"2.1 隐式的类型转换，索引失效","slug":"_2-1-隐式的类型转换-索引失效","link":"#_2-1-隐式的类型转换-索引失效","children":[]},{"level":3,"title":"2.2 查询条件包含 or，可能导致索引失效","slug":"_2-2-查询条件包含-or-可能导致索引失效","link":"#_2-2-查询条件包含-or-可能导致索引失效","children":[]},{"level":3,"title":"2.3. like 通配符可能导致索引失效。","slug":"_2-3-like-通配符可能导致索引失效。","link":"#_2-3-like-通配符可能导致索引失效。","children":[]},{"level":3,"title":"2.4 查询条件不满足联合索引的最左匹配原则","slug":"_2-4-查询条件不满足联合索引的最左匹配原则","link":"#_2-4-查询条件不满足联合索引的最左匹配原则","children":[]},{"level":3,"title":"2.5 在索引列上使用 mysql 的内置函数","slug":"_2-5-在索引列上使用-mysql-的内置函数","link":"#_2-5-在索引列上使用-mysql-的内置函数","children":[]},{"level":3,"title":"2.6 对索引进行列运算（如，+、-、*、/）, 索引不生效","slug":"_2-6-对索引进行列运算-如-、-、-、-索引不生效","link":"#_2-6-对索引进行列运算-如-、-、-、-索引不生效","children":[]},{"level":3,"title":"2.7 索引字段上使用（！= 或者 < >），索引可能失效","slug":"_2-7-索引字段上使用-或者-索引可能失效","link":"#_2-7-索引字段上使用-或者-索引可能失效","children":[]},{"level":3,"title":"2.8 索引字段上使用 is null， is not null，索引可能失效","slug":"_2-8-索引字段上使用-is-null-is-not-null-索引可能失效","link":"#_2-8-索引字段上使用-is-null-is-not-null-索引可能失效","children":[]},{"level":3,"title":"2.9 左右连接，关联的字段编码格式不一样","slug":"_2-9-左右连接-关联的字段编码格式不一样","link":"#_2-9-左右连接-关联的字段编码格式不一样","children":[]},{"level":3,"title":"2.10 优化器选错了索引","slug":"_2-10-优化器选错了索引","link":"#_2-10-优化器选错了索引","children":[]},{"level":3,"title":"3.1 limit 深分页为什么会变慢","slug":"_3-1-limit-深分页为什么会变慢","link":"#_3-1-limit-深分页为什么会变慢","children":[]},{"level":3,"title":"3.2 如何优化深分页问题","slug":"_3-2-如何优化深分页问题","link":"#_3-2-如何优化深分页问题","children":[]},{"level":3,"title":"4.1 单表数据量太大为什么会变慢？","slug":"_4-1-单表数据量太大为什么会变慢","link":"#_4-1-单表数据量太大为什么会变慢","children":[]},{"level":3,"title":"4.2 一棵 B + 树可以存多少数据量","slug":"_4-2-一棵-b-树可以存多少数据量","link":"#_4-2-一棵-b-树可以存多少数据量","children":[]},{"level":3,"title":"4.3 如何解决单表数据量太大，查询变慢的问题","slug":"_4-3-如何解决单表数据量太大-查询变慢的问题","link":"#_4-3-如何解决单表数据量太大-查询变慢的问题","children":[]},{"level":3,"title":"7.1 什么是脏页","slug":"_7-1-什么是脏页","link":"#_7-1-什么是脏页","children":[]},{"level":3,"title":"7.2 一条更新语句是如何执行的？","slug":"_7-2-一条更新语句是如何执行的","link":"#_7-2-一条更新语句是如何执行的","children":[]},{"level":3,"title":"7.3 为什么会出现脏页呢？","slug":"_7-3-为什么会出现脏页呢","link":"#_7-3-为什么会出现脏页呢","children":[]},{"level":3,"title":"7.4 什么时候会刷脏页（flush）？","slug":"_7-4-什么时候会刷脏页-flush","link":"#_7-4-什么时候会刷脏页-flush","children":[]},{"level":3,"title":"7.5 为什么刷脏页会导致 SQL 变慢呢？","slug":"_7-5-为什么刷脏页会导致-sql-变慢呢","link":"#_7-5-为什么刷脏页会导致-sql-变慢呢","children":[]},{"level":3,"title":"8.1 order by 的 Using filesort 文件排序","slug":"_8-1-order-by-的-using-filesort-文件排序","link":"#_8-1-order-by-的-using-filesort-文件排序","children":[]},{"level":3,"title":"8.2 order by 文件排序效率为什么较低","slug":"_8-2-order-by-文件排序效率为什么较低","link":"#_8-2-order-by-文件排序效率为什么较低","children":[]},{"level":3,"title":"8.3 如何优化 order by 的文件排序","slug":"_8-3-如何优化-order-by-的文件排序","link":"#_8-3-如何优化-order-by-的文件排序","children":[]},{"level":3,"title":"11.1 group by 的执行流程","slug":"_11-1-group-by-的执行流程","link":"#_11-1-group-by-的执行流程","children":[]},{"level":3,"title":"11.2 group by 可能会慢在哪里？","slug":"_11-2-group-by-可能会慢在哪里","link":"#_11-2-group-by-可能会慢在哪里","children":[]},{"level":3,"title":"11.3 如何优化 group by 呢？","slug":"_11-3-如何优化-group-by-呢","link":"#_11-3-如何优化-group-by-呢","children":[]}],"git":{},"readingTime":{"minutes":25.99,"words":7798},"filePathRelative":"database/Advanced/reasons-for-slow-mysql-queries.md","localizedDate":"2023年8月29日","copyright":{"author":"LiucyLinux(LiucyLinux.cn)","license":"MIT"},"autoDesc":true}`);export{e as data};
